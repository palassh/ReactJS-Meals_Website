{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\palsahu\\\\ReactTutorial\\\\food-order-app\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./CartContext\";\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartValue = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => {\n      item.id === action.item.id;\n    });\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartValue;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartReducer] = useReducer(cartReducer, defaultCartValue);\n\n  const addCartItemHandler = item => {\n    dispatchCartReducer({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeCartItemHandler = id => {};\n\n  const cartValue = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addCartItemHandler,\n    removeItem: removeCartItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"LsmUtuMZTH6FP5nDrSU9qIXSm6Y=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CartContext","React","useReducer","defaultCartValue","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","CartProvider","props","cartState","dispatchCartReducer","addCartItemHandler","removeCartItemHandler","cartValue","addItem","removeItem","children"],"sources":["C:/Users/palsahu/ReactTutorial/food-order-app/src/store/CartProvider.js"],"sourcesContent":["import CartContext from \"./CartContext\";\r\nimport React, { useReducer } from \"react\";\r\n\r\nconst defaultCartValue = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const existingCartItemIndex = state.items.findIndex((item) => {\r\n      item.id === action.item.id;\r\n    });\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    let updatedItems;\r\n\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    return { items: updatedItems, totalAmount: updatedTotalAmount };\r\n  }\r\n  return defaultCartValue;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartReducer] = useReducer(\r\n    cartReducer,\r\n    defaultCartValue\r\n  );\r\n\r\n  const addCartItemHandler = (item) => {\r\n    dispatchCartReducer({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeCartItemHandler = (id) => {};\r\n\r\n  const cartValue = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addCartItemHandler,\r\n    removeItem: removeCartItemHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartValue}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EADgB;EAEvBC,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACzB,MAAMC,kBAAkB,GACtBH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MADtD;IAGA,MAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAuBJ,IAAD,IAAU;MAC5DA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EAAxB;IACD,CAF6B,CAA9B;IAGA,MAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB;IACA,IAAII,YAAJ;;IAEA,IAAID,gBAAJ,EAAsB;MACpB,MAAME,WAAW,GAAG,EAClB,GAAGF,gBADe;QAElBJ,MAAM,EAAEI,gBAAgB,CAACJ,MAAjB,GAA0BL,MAAM,CAACG,IAAP,CAAYE;MAF5B,CAApB;MAIAK,YAAY,GAAG,CAAC,GAAGX,KAAK,CAACH,KAAV,CAAf;MACAc,YAAY,CAACJ,qBAAD,CAAZ,GAAsCK,WAAtC;IACD,CAPD,MAOO;MACLD,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACG,IAA1B,CAAf;IACD;;IAED,OAAO;MAAEP,KAAK,EAAEc,YAAT;MAAuBb,WAAW,EAAEK;IAApC,CAAP;EACD;;EACD,OAAOP,gBAAP;AACD,CAzBD;;AA2BA,MAAMkB,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,SAAD,EAAYC,mBAAZ,IAAmCtB,UAAU,CACjDI,WADiD,EAEjDH,gBAFiD,CAAnD;;EAKA,MAAMsB,kBAAkB,GAAId,IAAD,IAAU;IACnCa,mBAAmB,CAAC;MAAEf,IAAI,EAAE,KAAR;MAAeE,IAAI,EAAEA;IAArB,CAAD,CAAnB;EACD,CAFD;;EAIA,MAAMe,qBAAqB,GAAIV,EAAD,IAAQ,CAAE,CAAxC;;EAEA,MAAMW,SAAS,GAAG;IAChBvB,KAAK,EAAEmB,SAAS,CAACnB,KADD;IAEhBC,WAAW,EAAEkB,SAAS,CAAClB,WAFP;IAGhBuB,OAAO,EAAEH,kBAHO;IAIhBI,UAAU,EAAEH;EAJI,CAAlB;EAOA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEC,SAA7B;IAAA,UACGL,KAAK,CAACQ;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAxBD;;GAAMT,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}